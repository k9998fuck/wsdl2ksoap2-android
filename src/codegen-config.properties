# Extensions - The extension class names are comma separated and these extensions will run before the main emitter.
# These are loaded in their lexical order.
# Note the last extension - It includes a check to figure out whether proper databinding has taken place.
# This extension should appear AFTER all the databinding extensions inorder to function properly.
codegen.extension=org.ksoap2.axis2.wsdl.KSoap2PackageFinder,\
org.apache.axis2.wsdl.codegen.extension.SimpleDBExtension,\
org.apache.axis2.wsdl.codegen.extension.TypeMapperExtension,\
org.apache.axis2.wsdl.codegen.extension.DefaultDatabindingExtension,\
org.apache.axis2.wsdl.codegen.extension.PolicyEvaluator

#extensions that work after the main emitter. These will include functionality such as formatters
post.codegen.extension=org.apache.axis2.wsdl.codegen.extension.ExcludePackageExtension

# The third party schemas to be loaded. e.g. The Xmime extension
# Note - these will be loaded from the org.apache.axis2.wsdl.codegen.schema package.
# So whatever the third party schema's that are listed here should be present there.
codegen.thirdparty.schema=xmime.xsd,soap-enc.xsd

#####################################################################################################################
# Codegen data binding frameworks and their related information.
# The names of the codegeneration frameworks in lexical order.
# These are the names that should be passed onto the tool as arguments as well.
codegen.databinding.frameworks=adb,none

# This property keeps the names of the databinding frameworks which support unwrapping.
codegen.databinding.unwrap.supported=adb

# The related extensions for the specified data binding frameworks above.
# Note -  these are in the lexical order of the framework names. There is an implicit assumption
# that a given databinding framework will be processed only by one extension.
codegen.databinding.extensions=org.apache.axis2.wsdl.codegen.extension.SimpleDBExtension,\
org.apache.axis2.wsdl.codegen.extension.DefaultDatabindingExtension

# The default data binding framework name.
codegen.databinding.frameworks.default=adb

#codegen.databinding.testobject.template=/org/apache/axis2/wsdl/template/java/TestObjectCreationTemplate.xsl

#####################################################################################################################
# Language types - these are the language types that the code generator understands. Again this is the name of the
# language that should be passed from the tool as well.
codegen.languages=java

# Emitter class is the major code generator class that should be changed according to the language.
# The emitters need to implement the org.apache.axis2.wsdl.codegen.emitter.Emitter interface.
# Note - The emitters should appear in the lexical order of the languages. So the language java in the above
# list corresponds to the org.apache.axis2.wsdl.codegen.emitter.JavaEmitter.
codegen.emitters=org.ksoap2.axis2.wsdl.KSoap2ServiceEmitter

# Default language, this is the default language that would be picked when no language is specified. it should be
# one of the languages specified above.
codegen.languages.default=java

# Default source folder name.
codegen.general.src.name=build

# Default resource folder name.
codegen.general.resource.name=resources

#####################################################################################################################
########################  Language specific section #################################################################
#####################################################################################################################
# The language specific section has a special custom style. The language name comes first and separated from the period
# a unique name. These parameters will be included in a hashmap that is will be stored in another hash map with the
# language as the key.
#####################################################################################################################
# Java section  - Templates.
# The format of the templates is <writer-class-name>,<template-name>
# Note this section is specific to the emitter logic. One can have anything here!
java.interface.template=org.apache.axis2.wsdl.codegen.writer.InterfaceWriter,/KSoap2InterfaceTemplate.xslt
java.interface.impl.template=org.apache.axis2.wsdl.codegen.writer.InterfaceImplementationWriter,/KSoap2InterfaceImplementationTemplate.xslt
# File extension for generated files from this language.
java.filename.extension=java
